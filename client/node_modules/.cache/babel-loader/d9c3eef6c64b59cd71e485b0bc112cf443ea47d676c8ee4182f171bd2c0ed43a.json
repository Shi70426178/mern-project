{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern-project\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAdmin\n}) => {\n  const isAuthenticated = !!localStorage.getItem('token'); // Check if the user is authenticated\n  const user = JSON.parse(localStorage.getItem('user'));\n  const userIsAdmin = user && user.isAdmin;\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  if (isAdmin && !userIsAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","isAdmin","isAuthenticated","localStorage","getItem","user","JSON","parse","userIsAdmin","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/mern-project/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ isAdmin }) => {\r\n    const isAuthenticated = !!localStorage.getItem('token'); // Check if the user is authenticated\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userIsAdmin = user && user.isAdmin;\r\n\r\n    if (!isAuthenticated) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    if (isAdmin && !userIsAdmin) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACpC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMI,WAAW,GAAGH,IAAI,IAAIA,IAAI,CAACJ,OAAO;EAExC,IAAI,CAACC,eAAe,EAAE;IAClB,oBAAOH,OAAA,CAACH,QAAQ;MAACa,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,IAAIZ,OAAO,IAAI,CAACO,WAAW,EAAE;IACzB,oBAAOT,OAAA,CAACH,QAAQ;MAACa,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,oBAAOd,OAAA,CAACF,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB,CAAC;AAACC,EAAA,GAdId,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}