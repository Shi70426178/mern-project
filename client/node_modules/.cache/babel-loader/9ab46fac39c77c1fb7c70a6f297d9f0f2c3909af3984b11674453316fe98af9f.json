{"ast":null,"code":"import React from'react';import{Navigate,Outlet}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{isAdmin}=_ref;const isAuthenticated=!!localStorage.getItem('token');// Check if the user is authenticated\nconst user=JSON.parse(localStorage.getItem('user'));const userIsAdmin=user&&user.isAdmin;if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(isAdmin&&!userIsAdmin){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsx(Outlet,{});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","Outlet","jsx","_jsx","ProtectedRoute","_ref","isAdmin","isAuthenticated","localStorage","getItem","user","JSON","parse","userIsAdmin","to"],"sources":["C:/mern-project/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ isAdmin }) => {\r\n    const isAuthenticated = !!localStorage.getItem('token'); // Check if the user is authenticated\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const userIsAdmin = user && user.isAdmin;\r\n\r\n    if (!isAuthenticated) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    if (isAdmin && !userIsAdmin) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAAAE,eAAe,CAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AACzD,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CACrD,KAAM,CAAAI,WAAW,CAAGH,IAAI,EAAIA,IAAI,CAACJ,OAAO,CAExC,GAAI,CAACC,eAAe,CAAE,CAClB,mBAAOJ,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CAEA,GAAIR,OAAO,EAAI,CAACO,WAAW,CAAE,CACzB,mBAAOV,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,GAAG,CAAE,CAAC,CAC9B,CAEA,mBAAOX,IAAA,CAACF,MAAM,GAAE,CAAC,CACrB,CAAC,CAED,cAAe,CAAAG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}